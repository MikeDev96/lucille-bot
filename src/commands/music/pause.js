import Command from "../../models/Command.js"
import LucilleClient from "../../classes/LucilleClient.js"
import { isInBotsVoiceChannel } from "../../helpers.js"

export default class extends Command {
  constructor () {
    super({
      name: "pause",
      aliases: [],
      group: "music",
      memberName: "pause",
      description: "Pauses the current playing song",
      guildOnly: true,
    })
  }

  async run (msg) {
    const music = LucilleClient.Instance.getGuildInstance(msg.guild).music
    if (!isInBotsVoiceChannel(LucilleClient.Instance, msg)) {
      msg.react("üñï")
      return
    }
    
    if (!music.player || music.player.state.status === 'idle') {
      msg.reply("‚ùå Nothing is currently playing to pause")
      return
    }
    
    try {
      music.setState({ pauser: msg.author.id })
      music.player.pause()
      music.updateEmbed()
      msg.react("‚è∏Ô∏è")
    } catch (error) {
      console.error("Pause command error:", error)
      msg.reply(`‚ùå Failed to pause: ${error.message}`)
    }
  }

  getHelpMessage (prefix) {
    return {
      embeds: [
        {
          title: "‚è∏Ô∏è Pause Command Help",
          description: "Pause the currently playing music!",
          color: 0xffa500,
          fields: [
            {
              name: "üéµ Usage",
              value: `\`${prefix}pause\`\nPause the current song`,
              inline: false
            },
            {
              name: "‚ö†Ô∏è Requirements",
              value: "‚Ä¢ Must be in the same voice channel as the bot\n‚Ä¢ Music must be currently playing\n‚Ä¢ Use 'resume' to continue",
              inline: false
            },
            {
              name: "üí° Tips",
              value: "‚Ä¢ Paused music can be resumed with 'resume'\n‚Ä¢ Only the person who paused can resume\n‚Ä¢ Queue continues to work while paused",
              inline: false
            }
          ],
          footer: {
            text: "Take a break! ‚è∏Ô∏è",
          },
        },
      ],
    }
  }
}